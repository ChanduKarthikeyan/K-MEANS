module tb;

  // Testbench signals
  reg [35:0] in; 
  reg clk, reset;
  wire [1:0] indx;
  wire indxc;

  // Instantiate the MFB1 module
  MFB1 uut (
    .in(in),
    .indx(indx),
    .indxc(indxc),
    .clk(clk),
    .reset(reset)
  );

  // Clock generation
  always begin
    #5 clk = ~clk;  // 10ns clock period
  end

  // Stimulus block
  initial begin
    // Initialize signals
    clk = 0;
    reset = 1;  // Assert reset initially
    in = 36'b0;

    // Apply reset for 10ns to initialize the system
    #10;
    reset = 0;  // Deassert reset

    // Test cases with specified values
    in = 36'b000000000000000000000000000000000000;  // Test case 1: input = 0
    #10;

    in = 36'b000000000000000000000000000000000010;  // Test case 2: input = 2
    #10;

    in = 36'b000000000000000000000000000000000101;  // Test case 3: input = 5
    #10;

    in = 36'b000000000000000000000000000000001000;  // Test case 4: input = 8
    #10;

    in = 36'b000000000000000000000000000000000011;  // Test case 5: input = 3
    #10;

    in = 36'b000000000000000000000000000000000010;  // Test case 6: input = 2
    #10;

    in = 36'b000000000000000000000000000000000001;  // Test case 7: input = 1
    #10;

    in = 36'b000000000000000000000000000000000000;  // Test case 8: input = 0
    #10;

    in = 36'b000000000000000000000000000000000011;  // Test case 9: input = 3
    #10;

    in = 36'b000000000000000000000000000000000001;  // Test case 10: input = 1
    #10;

    in = 36'b000000000000000000000000000000000010;  // Test case 11: input = 2
    #10;

    in = 36'b111111111111111111111111111111111111;  // Test case 12: input = -1 (36-bit signed representation)
    #10;

    in = 36'b000000000000000000000000000000000011;  // Test case 13: input = 3
    #10;

    in = 36'b000000000000000000000000000000000101;  // Test case 14: input = 5
    #10;

    in = 36'b000000000000000000000000000000000011;  // Test case 15: input = 3
    #10;

    in = 36'b000000000000000000000000000000000010;  // Test case 16: input = 2
    #10;

    in = 36'b000000000000000000000000000000000100;  // Test case 17: input = 4
    #10;

    in = 36'b000000000000000000000000000000000101;  // Test case 18: input = 5
    #10;

    in = 36'b000000000000000000000000000000110111;  // Test case 19: input = 57
    #10;

    // End of simulation
    $finish;
  end

  // Monitoring outputs
  initial begin
    $monitor("At time %t, in = %b, indx = %b, indxc = %b", 
             $time, in, indx, indxc);
  end

endmodule
